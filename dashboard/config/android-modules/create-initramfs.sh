#!/usr/bin/env bash

# Copyright 2022 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Bundles initramfs file given a root kernel directory.

# $1 MODULES_STAGING_DIR    <The directory to look for all the compiled modules>
# $2 IMAGE_STAGING_DIR  <The destination directory in which MODULES_LIST is
# $3 OUT_DIR; output directory
#                        expected, and it's corresponding modules.* files>
function create_modules_staging() {
  local src_dir=$(echo $1/lib/modules/*)
  local version=$(basename "${src_dir}")
  local dest_dir=$2/lib/modules/${version}
  local dest_stage=$2
  local out_dir=$3

  rm -rf ${dest_dir}
  mkdir -p ${dest_dir}/kernel

  # Confirm directory structure is correct, then copy compiled modules
  find ${src_dir}/kernel/ -maxdepth 1 -mindepth 1 \
    -exec cp -r {} ${dest_dir}/kernel/ \;
  # The other modules.* files will be generated by depmod
  cp ${src_dir}/modules.order ${dest_dir}/modules.order
  cp ${src_dir}/modules.builtin ${dest_dir}/modules.builtin

  # Add external modules
  mkdir -p ${dest_dir}/extra/
  cp -r ${src_dir}/extra/* ${dest_dir}/extra/
  (cd ${dest_dir}/ && \
      find extra -type f -name "*.ko" | sort >> modules.order)

  # Re-run depmod to detect any dependencies between in-kernel and externel
  # modules. The, create modules.order based on all the modules compiled.
  run_depmod ${dest_stage} "${version}" ${out_dir}
  cp ${dest_dir}/modules.order ${dest_dir}/modules.load
}

# $1 directory of kernel modules ($1/lib/modules/x.y)
# $2 kernel version
# $3 OUT_DIR; output directory
function run_depmod() {
  (
    local ramdisk_dir=$1
    local depmod_output

    cd ${ramdisk_dir}
    if ! depmod_output="$(depmod -F $3/System.map -b . $2 2>&1)"; then
      echo "$depmod_output" >&2
      exit 1
    fi
    echo "$depmod_output"
    if { echo "$depmod_output" | grep -q "needs unknown symbol"; }; then
      echo "ERROR: kernel module(s) need unknown symbol(s)" >&2
      exit 1
    fi
  )
}

# $1 ROOT_DIR: Common kernel directory
ROOT_DIR=$1
MODULES_STAGING_DIR=${ROOT_DIR}/staging

rm -rf ${MODULES_STAGING_DIR}/initramfs_staging

create_modules_staging ${MODULES_STAGING_DIR} ${MODULES_STAGING_DIR}/initramfs_staging ${ROOT_DIR}

mkbootfs ${MODULES_STAGING_DIR}/initramfs_staging >${MODULES_STAGING_DIR}/initramfs.cpio

lz4 -c -l -12 --favor-decSpeed ${MODULES_STAGING_DIR}/initramfs.cpio >${ROOT_DIR}/initramfs.img
